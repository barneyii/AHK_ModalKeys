
; Modifiers
  $*LControl::      PressKey(   "LControl" )
  $*LControl Up::   ReleaseKey( "LControl" )
  $*LShift::        PressKey(   "LShift" )
  $*LShift Up::     ReleaseKey( "LShift" )
  $*LAlt::          PressKey(   "LAlt" )
  $*LAlt Up::       ReleaseKey( "LAlt" )
  $*LWin::          PressKey(   "LWin" )
  $*LWin Up::       ReleaseKey( "LWin" )
  $*RControl::      PressKey(   "RControl" )
  $*RControl Up::   ReleaseKey( "RControl" )
  $*RShift::        PressKey(   "RShift" )
  $*RShift Up::     ReleaseKey( "RShift" )
  $*RAlt::          PressKey(   "RAlt" )
  $*RAlt Up::       ReleaseKey( "RAlt" )


; Normal Keys
  ; Left Hand
  $*Escape::        PressKey(   "Escape" )
  $*Escape Up::     ReleaseKey( "Escape" )
  $*`::             PressKey(   "Backtick" )
  $*` Up::          ReleaseKey( "Backtick" )
  $*Tab::           PressKey(   "Tab" )
  $*Tab Up::        ReleaseKey( "Tab" )
  $*1::             PressKey(   "1" )
  $*1 Up::          ReleaseKey( "1" )
  $*2::             PressKey(   "2" )
  $*2 Up::          ReleaseKey( "2" )
  $*3::             PressKey(   "3" )
  $*3 Up::          ReleaseKey( "3" )
  $*4::             PressKey(   "4" )
  $*4 Up::          ReleaseKey( "4" )
  $*5::             PressKey(   "5" )
  $*5 Up::          ReleaseKey( "5" )
  $*6::             PressKey(   "6" )
  $*6 Up::          ReleaseKey( "6" )
  $*'::             PressKey(   "Apostrophe" )
  $*' Up::          ReleaseKey( "Apostrophe" )
  $*,::             PressKey(   "Comma" )
  $*, Up::          ReleaseKey( "Comma" )
  $*.::             PressKey(   "Dot" )
  $*. Up::          ReleaseKey( "Dot" )
  $*p::             PressKey(   "p" )
  $*p Up::          ReleaseKey( "p" )
  $*y::             PressKey(   "y" )
  $*y Up::          ReleaseKey( "y" )
  $*a::             PressKey(   "a" )
  $*a Up::          ReleaseKey( "a" )
  $*o::             PressKey(   "o" )
  $*o Up::          ReleaseKey( "o" )
  $*e::             PressKey(   "e" )
  $*e Up::          ReleaseKey( "e" )
  $*u::             PressKey(   "u" )
  $*u Up::          ReleaseKey( "u" )
  $*i::             PressKey(   "i" )
  $*i Up::          ReleaseKey( "i" )
  $*;::             PressKey(   "Semicolon" )
  $*; Up::          ReleaseKey( "Semicolon" )
  $*q::             PressKey(   "q" )
  $*q Up::          ReleaseKey( "q" )
  $*j::             PressKey(   "j" )
  $*j Up::          ReleaseKey( "j" )
  $*k::             PressKey(   "k" )
  $*k Up::          ReleaseKey( "k" )
  $*x::             PressKey(   "x" )
  $*x Up::          ReleaseKey( "x" )

  ; Right Hand
  $*7::             PressKey(   "7" )
  $*7 Up::          ReleaseKey( "7" )
  $*8::             PressKey(   "8" )
  $*8 Up::          ReleaseKey( "8" )
  $*9::             PressKey(   "9" )
  $*9 Up::          ReleaseKey( "9" )
  $*0::             PressKey(   "Zero" )
  $*0 Up::          ReleaseKey( "Zero" )
  $*[::             PressKey(   "OpenBracket" )
  $*[ Up::          ReleaseKey( "OpenBracket" )
  $*]::             PressKey(   "CloseBracket" )
  $*] Up::          ReleaseKey( "CloseBracket" )
  $*g::             PressKey(   "g" )
  $*g Up::          ReleaseKey( "g" )
  $*l::             PressKey(   "l" )
  $*l Up::          ReleaseKey( "l" )
  $*c::             PressKey(   "c" )
  $*c Up::          ReleaseKey( "c" )
  $*r::             PressKey(   "r" )
  $*r Up::          ReleaseKey( "r" )
  $*h::             PressKey(   "h" )
  $*h Up::          ReleaseKey( "h" )
  $*s::             PressKey(   "s" )
  $*s Up::          ReleaseKey( "s" )
  $*t::             PressKey(   "t" )
  $*t Up::          ReleaseKey( "t" )
  $*n::             PressKey(   "n" )
  $*n Up::          ReleaseKey( "n" )
  $*d::             PressKey(   "d" )
  $*d Up::          ReleaseKey( "d" )
  $*-::             PressKey(   "Dash" )
  $*- Up::          ReleaseKey( "Dash" )
  $*f::             PressKey(   "f" )
  $*f Up::          ReleaseKey( "f" )
  $*Delete::        PressKey(   "Delete" )
  $*Delete Up::     ReleaseKey( "Delete" )
  $*Backspace::     PressKey(   "Backspace" )
  $*Backspace Up::  ReleaseKey( "Backspace" )
  $*/::             PressKey(   "Forwardslash" )
  $*/ Up::          ReleaseKey( "Forwardslash" )
  $*=::             PressKey(   "Equals" )
  $*= Up::          ReleaseKey( "Equals" )
  $*\::             PressKey(   "Backslash" )
  $*\ Up::          ReleaseKey( "Backslash" )
  $*Enter::         PressKey(   "Enter" )
  $*Enter Up::      ReleaseKey( "Enter" )
  $*Space::         PressKey(   "Space" )
  $*Space Up::      ReleaseKey( "Space" )
  $*b::             PressKey(   "b" )
  $*b Up::          ReleaseKey( "b" )
  $*m::             PressKey(   "m" )
  $*m Up::          ReleaseKey( "m" )
  $*w::             PressKey(   "w" )
  $*w Up::          ReleaseKey( "w" )
  $*v::             PressKey(   "v" )
  $*v Up::          ReleaseKey( "v" )
  $*z::             PressKey(   "z" )
  $*z Up::          ReleaseKey( "z" )

  ; Movement
  $*Left::          PressKey(   "Left" )
  $*Left Up::       ReleaseKey( "Left" )
  $*Right::         PressKey(   "Right" )
  $*Right Up::      ReleaseKey( "Right" )
  $*Up::            PressKey(   "Up" )
  $*Up Up::         ReleaseKey( "Up" )
  $*Down::          PressKey(   "Down" )
  $*Down Up::       ReleaseKey( "Down" )
  $*End::           PressKey(   "End" )
  $*End Up::        ReleaseKey( "End" )
  $*Home::          PressKey(   "Home" )
  $*Home Up::       ReleaseKey( "Home" )
  $*PgUp::          PressKey(   "PgUp" )
  $*PgUp Up::       ReleaseKey( "PgUp" )
  $*PgDn::          PressKey(   "PgDn" )
  $*PgDn Up::       ReleaseKey( "PgDn" )
